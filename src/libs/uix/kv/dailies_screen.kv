#:import Datetime datetime.datetime
#:import Calendar calendar.Calendar
#:import Timedelta dateutil.relativedelta.relativedelta

<Day@ButtonBehavior+Label>:
    canvas.before:
        Color:
            rgba: (0,0,0,0) if self.text != str(app.dt.day) else (.7,.2,.2,1)
        Ellipse:
            pos: (self.pos[0] + self.size[0]/2) - (self.size[1]/2), self.pos[1]
            size: self.size[1], self.size[1]
        Color:
            rgba: (0,0,0,0) if (self.text) not in root.parent.parent.calendars else (0,1,0,1)
        RoundedRectangle:
            pos: self.pos[0]+self.size[0]/2-12, self.pos[1] + 2
            size: 8,8
			radius: [(4, 4),(4, 4),(4, 4),(4, 4)]
        Color:
            rgba: (0,1,0,0) if (self.text) not in root.parent.parent.dailies else (1,0,1,1)
        RoundedRectangle:
            pos: self.pos[0]+self.size[0]/2, self.pos[1] + 2
	        size: 8,8
			radius: [(4, 4),(4, 4),(4, 4),(4, 4)]
        Color:
            rgba: (0,0,0,0) if (self.text) not in root.parent.parent.todos else (1,0.9,0.5,1)
        RoundedRectangle:
            pos: self.pos[0]+self.size[0]/2+12, self.pos[1] + 2
		    size:8,8
		    radius: [(4, 4),(4, 4),(4, 4),(4, 4)]

    text:""

    datepicker: root.parent.parent
    color: 1,1,1,1
    size_hint:1,1
    background_color: 0,0,0,0
    disabled: True if self.text == "" else False
    on_release:
        #app.current_date = app.current_date.replace(day=int(self.text))
        app.on_day(self.text)

<DayLabel@Label>:
    canvas.before:
        Color:
            rgba: (0,0,0,0)
        Rectangle:
            pos: self.pos
            size: self.size

    text:""
    datepicker: root.parent.parent
    color: 1,1,1,1
    size_hint:1,1
    background_color: 0,0,0,0

<Week@BoxLayout>:
    datepicker: root.parent
    weekdays: ["","","","","","",""]
    Day:
        text: str(root.weekdays[0])
    Day:
        text: str(root.weekdays[1])
    Day:
        text: str(root.weekdays[2])
    Day:
        text: str(root.weekdays[3])
    Day:
        text: str(root.weekdays[4])
    Day:
        text: str(root.weekdays[5])
    Day:
        text: str(root.weekdays[6])

<WeekDays@BoxLayout>:
    DayLabel:
        text: "Mon"
    DayLabel:
        text: "Tue"
    DayLabel:
        text: "Wed"
    DayLabel:
        text: "Thu"
    DayLabel:
        text: "Fri"
    DayLabel:
        text: "Sat"
    DayLabel:
        text: "Sun"

<NavBar@BoxLayout>:
    datepicker: self.parent
    LabelButton:
        text: "<"
        on_release:
            #app.current_date -= Timedelta(months=1)
            app.on_month(-1)
    LabelButton:
        text: Datetime.strftime(app.dt,"%d %b %Y")
        on_release:
            app.on_today()
    LabelButton:
        text: ">"
        on_release:
            app.on_month(1)

<DatePicker@BoxLayout>:
    bg_color: 0.1, 0.1, 0.1, 1
    dailies: []
    todos: []
    calendars: []
    canvas:
        Color:
            rgba: self.bg_color
        Rectangle:
            pos:self.pos
            size: self.size

    months: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    calendar: Calendar()
    days: [(i if i > 0 else "") for i in self.calendar.itermonthdays(app.dt.year, app.dt.month)] + [""] * 14
    orientation: "vertical"
    NavBar:
    WeekDays:
    Week:
        weekdays: root.days[0:7]
    Week:
        weekdays: root.days[7:14]
    Week:
        weekdays: root.days[14:21]
    Week:
        weekdays: root.days[21:28]
    Week:
        weekdays: root.days[28:35]
    Week:
        weekdays: root.days[35:]

<LabelButton@ButtonBehavior+Label>:
    bg_color: (0,0,0,0)
    canvas.before:
        Color:
            rgba: self.bg_color if self.bg_color else (.9,.9,.9,1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
			radius: [(10, 10),(10, 10),(10, 10),(10, 10)]
    text:""
    color: 1,1,1,1
    size_hint:1,1

    disabled: True if self.text == "" else False

<DailiesScreen>
    BoxLayout:
        orientation: "vertical"
        ScrollView:
            size_hint: 1, 1
            id: dailies_scrlv
            BoxLayout:
                orientation: "vertical"
                size_hint: 1, None
                height: daily_selector.height + daily_textinput.height
                DatePicker:
                    id: daily_selector
                    size_hint: 1, None
                    height: dp(300)
                    calendars: root.calendars
                    dailies: root.dailies
                    todos: root.todos
                MDInput:
                    size_hint: 1,None
                    id: daily_textinput
                    text: root.content
                    font_size: sp(14)
                    on_text: root.content = self.text
                    input_type: "text"
                    keyboard_suggestions: True
                    multiline: True
                    background_color: (0,0,0,1)
                    foreground_color: (1,1,1,1)
                    unfocus_on_touch: False
                    auto_indent: True
                    replace_crlf: True
                    height: max( (len(self._lines)+1) * self.line_height +dp(48), dailies_scrlv.height - dp(300))
